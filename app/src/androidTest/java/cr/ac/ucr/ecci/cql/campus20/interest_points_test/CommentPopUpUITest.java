package cr.ac.ucr.ecci.cql.campus20.interest_points_test;


import android.view.View;
import android.view.ViewGroup;
import android.view.ViewParent;

import androidx.test.espresso.DataInteraction;
import androidx.test.espresso.ViewInteraction;
import androidx.test.ext.junit.rules.ActivityScenarioRule;
import androidx.test.ext.junit.runners.AndroidJUnit4;
import androidx.test.filters.LargeTest;
import androidx.test.rule.ActivityTestRule;
import androidx.test.rule.GrantPermissionRule;

import org.hamcrest.Description;
import org.hamcrest.Matcher;
import org.hamcrest.TypeSafeMatcher;
import org.hamcrest.core.IsInstanceOf;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.concurrent.CountDownLatch;
import java.util.concurrent.TimeUnit;

import cr.ac.ucr.ecci.cql.campus20.InterestPoints.InterestPointsActivity;
import cr.ac.ucr.ecci.cql.campus20.MainEmptyActivity;
import cr.ac.ucr.ecci.cql.campus20.R;

import static androidx.test.espresso.Espresso.onData;
import static androidx.test.espresso.Espresso.onView;
import static androidx.test.espresso.action.ViewActions.click;
import static androidx.test.espresso.assertion.ViewAssertions.matches;
import static androidx.test.espresso.contrib.RecyclerViewActions.actionOnItemAtPosition;
import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
import static androidx.test.espresso.matcher.ViewMatchers.withContentDescription;
import static androidx.test.espresso.matcher.ViewMatchers.withId;
import static androidx.test.espresso.matcher.ViewMatchers.withText;
import static org.hamcrest.Matchers.allOf;
import static org.hamcrest.Matchers.anything;
import static org.hamcrest.Matchers.is;

/**
 * UI Test class for CommentsPopUp. Tests some data and behavior on Computaci칩n e Inform치tica school
 * comments popup. Also sets up a rule for granting runtime permissions when needed.
 * Code generated by Espresso Test Recorder.
 * */
@LargeTest
@RunWith(AndroidJUnit4.class)
public class CommentPopUpUITest {

    private CountDownLatch lock;

    @Before
    public void setup()
    {
        lock = new CountDownLatch(1);
    }

    @Rule
    public ActivityTestRule<InterestPointsActivity> mActivityTestRule = new ActivityTestRule<>(InterestPointsActivity.class);

    @Rule
    public GrantPermissionRule mGrantPermissionRule = GrantPermissionRule.grant("android.permission.ACCESS_FINE_LOCATION");

    @Rule
    public ActivityScenarioRule<InterestPointsActivity> activityActivityScenarioRule =
            new ActivityScenarioRule<>(InterestPointsActivity.class);

    @Test
    public void commentPopUpUITest() throws InterruptedException{
        ViewInteraction cardView = onView(
                allOf(childAtPosition(
                        allOf(withId(R.id.mainGrid),
                                childAtPosition(
                                        withClassName(is("android.widget.LinearLayout")),
                                        1)),
                        3),
                        isDisplayed()));
        cardView.perform(click());

        lock.await(1000, TimeUnit.MILLISECONDS);

        ViewInteraction recyclerView = onView(
                allOf(withId(R.id.rv_list_item),
                        childAtPosition(
                                withClassName(is("android.widget.RelativeLayout")),
                                1)));
        recyclerView.perform(actionOnItemAtPosition(4, click()));

        lock.await(1000, TimeUnit.MILLISECONDS);

        ViewInteraction recyclerView2 = onView(
                allOf(withId(R.id.rv_list_item),
                        childAtPosition(
                                withClassName(is("android.widget.RelativeLayout")),
                                1)));
        recyclerView2.perform(actionOnItemAtPosition(6, click()));

        ViewInteraction overflowMenuButton = onView(
                allOf(withContentDescription("M치s opciones"),
                        childAtPosition(
                                childAtPosition(
                                        withId(R.id.action_bar),
                                        1),
                                0),
                        isDisplayed()));
        overflowMenuButton.perform(click());

        ViewInteraction appCompatTextView = onView(
                allOf(withId(R.id.title), withText("M치s detalles"),
                        childAtPosition(
                                childAtPosition(
                                        withId(R.id.content),
                                        0),
                                0),
                        isDisplayed()));
        appCompatTextView.perform(click());

        DataInteraction linearLayout = onData(anything())
                .inAdapterView(allOf(withId(R.id.listSchoolItems),
                        childAtPosition(
                                withId(R.id.school_view),
                                1)))
                .atPosition(0);
        linearLayout.perform(click());

        ViewInteraction textView2 = onView(
                allOf(withId(R.id.tv_item_title), withText("Laboratorio 104"),
                        childAtPosition(
                                childAtPosition(
                                        IsInstanceOf.instanceOf(android.widget.LinearLayout.class),
                                        1),
                                0),
                        isDisplayed()));
        textView2.check(matches(isDisplayed()));

        ViewInteraction textView3 = onView(
                allOf(withId(R.id.tv_item_title), withText("Laboratorio 107"),
                        childAtPosition(
                                childAtPosition(
                                        IsInstanceOf.instanceOf(android.widget.LinearLayout.class),
                                        1),
                                0),
                        isDisplayed()));
        textView3.check(matches(withText("Laboratorio 107")));

        ViewInteraction textView4 = onView(
                allOf(withId(R.id.tv_item_title), withText("Laboratorio 107"),
                        childAtPosition(
                                childAtPosition(
                                        IsInstanceOf.instanceOf(android.widget.LinearLayout.class),
                                        1),
                                0),
                        isDisplayed()));
        textView4.check(matches(isDisplayed()));

        try {
            DataInteraction button = onData(
                    allOf(withId(R.id.comments),
                            childAtPosition(
                                    allOf(withId(R.id.school_view),
                                            childAtPosition(
                                                    withId(android.R.id.content),
                                                    0)),
                                    2),
                            isDisplayed()));
            button.check(matches(isDisplayed()));
        }catch(Exception e){
            e.printStackTrace();
        }

        ViewInteraction appCompatButton2 = onView(
                allOf(withId(R.id.comments), withText("Comentarios"),
                        childAtPosition(
                                allOf(withId(R.id.school_view),
                                        childAtPosition(
                                                withId(android.R.id.content),
                                                0)),
                                3),
                        isDisplayed()));
        appCompatButton2.perform(click());

        ViewInteraction ratingBar = onView(
                allOf(withId(R.id.ratingBar),
                        childAtPosition(
                                childAtPosition(
                                        IsInstanceOf.instanceOf(android.widget.FrameLayout.class),
                                        0),
                                1),
                        isDisplayed()));
        ratingBar.check(matches(isDisplayed()));

        ViewInteraction textView5 = onView(
                allOf(withIndex(withId(R.id.no_like), 1), withText("5"),
                        childAtPosition(
                                allOf(withId(R.id.ratingComment),
                                        childAtPosition(
                                                IsInstanceOf.instanceOf(android.widget.LinearLayout.class),
                                                0)),
                                2),
                        isDisplayed()));
        textView5.check(matches(withText("5")));

        ViewInteraction textView6 = onView(
                allOf(withIndex(withId(R.id.no_dislike), 1), withText("10"),
                        childAtPosition(
                                allOf(withId(R.id.ratingComment),
                                        childAtPosition(
                                                IsInstanceOf.instanceOf(android.widget.LinearLayout.class),
                                                0)),
                                4),
                        isDisplayed()));
        textView6.check(matches(withText("10")));

        ViewInteraction textView7 = onView(
                allOf(withIndex(withId(R.id.comment), 1), withText("No tan buena, creen que son de compu pero no lo son."),
                        childAtPosition(
                                allOf(withId(R.id.ratingComment),
                                        childAtPosition(
                                                IsInstanceOf.instanceOf(android.widget.LinearLayout.class),
                                                0)),
                                0),
                        isDisplayed()));
        textView7.check(matches(withText("No tan buena, creen que son de compu pero no lo son.")));
    }

    private static Matcher<View> childAtPosition(
            final Matcher<View> parentMatcher, final int position) {

        return new TypeSafeMatcher<View>() {
            @Override
            public void describeTo(Description description) {
                description.appendText("Child at position " + position + " in parent ");
                parentMatcher.describeTo(description);
            }

            @Override
            public boolean matchesSafely(View view) {
                ViewParent parent = view.getParent();
                return parent instanceof ViewGroup && parentMatcher.matches(parent)
                        && view.equals(((ViewGroup) parent).getChildAt(position));
            }
        };
    }

    public static Matcher<View> withIndex(final Matcher<View> matcher, final int index) {
        return new TypeSafeMatcher<View>() {
            int currentIndex = 0;

            @Override
            public void describeTo(Description description) {
                description.appendText("with index: ");
                description.appendValue(index);
                matcher.describeTo(description);
            }

            @Override
            public boolean matchesSafely(View view) {
                return matcher.matches(view) && currentIndex++ == index;
            }
        };
    }
}
